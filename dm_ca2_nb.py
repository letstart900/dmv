# -*- coding: utf-8 -*-
"""dm_ca2_nb.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mvffb-cX6UiOQvQqXuIvY6fUlujKHI-x
"""

def feature_count(df,col, count):  #constructing a dictionary with key = unique feature values and value = list of count_yes, count_no 
  featuredict = {}                  # eg: {sunny = [count_yes, count_no], ...}
  for i in range(len(col)):
    for j in df[col[i]].unique():
      cy = 0
      cn = 0
      lis = []
      for k in range(len(df[col[i]])):
        row_list = df.iloc[k].tolist()
        if row_list[i+1] == j and row_list[-1] == 'Yes':
          cy += 1
        elif row_list[i+1] == j and row_list[-1] == 'No':
          cn += 1
      lis.append(cy)
      lis.append(cn)
      featuredict[j] = lis

  return featuredict

def predict(df,test, featuredict, count):  #predicting the probability for the test case
  prob_y = 1
  prob_n = 1
  for i in test:
    prob_y = prob_y * featuredict[i][0]/count[0]
    prob_n = prob_n * featuredict[i][1]/count[1]

  prob_y = prob_y * count[0]/len(df)
  prob_n = prob_n * count[1]/len(df)

  prob_yes = prob_y/(prob_y + prob_n)
  prob_no = prob_n/(prob_y + prob_n)

  print("probability of playing:", prob_yes)
  print("Probability of not playing:", prob_no)

  if prob_yes > prob_no:
    print("Playing = Yes")
  else:
    print("Playing = No")

def main():
  df = pd.read_csv("play_tennis.csv")
  col = df.columns.tolist()
  col.pop(0)
  col.pop(-1)
  count = list(df['play'].value_counts())
  featuredict = feature_count(df,col,count)
  test = ['Rain','Hot','Normal','Weak']
  predict(df,test, featuredict, count)

import pandas as pd
main()